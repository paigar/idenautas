<!doctype html>
<html lang="{{ lang or metadata.language }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
    <title>{{ titulo | excerpt }} - {{ metadata.title }}</title>
    <meta name="description" content="{{ description or metadata.description }}">

    <meta name="generator" content="{{ eleventy.generator }}">

    {% set css %}
    {% include "main.css" %}
    {% endset %}
    <style>
      {{css | cssmin | safe}}
    </style>

    <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">
    <link rel="manifest" href="/favicon/site.webmanifest">
    <link rel="mask-icon" href="/favicon/safari-pinned-tab.svg" color="#5bbad5">
    <link rel="shortcut icon" href="/favicon/favicon.ico">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="msapplication-config" content="/favicon/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">

    {%- set alternateUrls = page.url | locale_links %}
    {% if alternateUrls.length %}
      <link rel="alternate" hreflang="{{ lang or metadata.language }}" href="{{ page.url | htmlBaseUrl(metadata.url) }}">
      {%- for link in alternateUrls %}
        <link rel="alternate" hreflang="{{ link.lang }}" href="{{ link.url | htmlBaseUrl(metadata.url) }}">
      {%- endfor %}
    {%- endif %}
  </head>
  <body{% if templateClass %} class="{{ templateClass }}"{% endif %}>
    <header class="header">
      {% include "layouts/_cabecera.njk" %}
    </header>

    <main>
      <div class="fondo-menu"></div>

      {{ content | safe }}
    </main>

    {% include "layouts/_footer.njk" %}

    <script>
      const progrevisos = document.querySelectorAll(".progresivo");

      observer = new IntersectionObserver((marcos) => {
        marcos.forEach((marco) => {
          if (marco.intersectionRatio > 0) {
            cargarImagenGrande(marco.target);
          }
        });
      }, {
        rootMargin: "0px 0px 50% 0px",
        threshold: 0
      });

      progrevisos.forEach((contImg) => {
        observer.observe(contImg);
      });

      function cargarImagenGrande(marcoImagen) {
        let imgSmall = marcoImagen.querySelector(".img-small");
        let imgLarge = new Image();
        let x = Math.min(3000, marcoImagen.offsetWidth);
        let y = Math.min(3000, marcoImagen.offsetHeight);
        imgLarge.src = "https://ucarecdn.com/" + marcoImagen.dataset.uuid + "/-/scale_crop/" + x + "x" + y + "/smart_faces/-/format/auto/";
        imgLarge.alt = marcoImagen.dataset.alt;
        imgLarge.onload = function () {
          imgLarge
            .classList
            .add("loaded");
          marcoImagen.removeChild(imgSmall);
        };
        marcoImagen.appendChild(imgLarge);
        observer.unobserve(marcoImagen);
      }
    </script>
  </body>
</html>